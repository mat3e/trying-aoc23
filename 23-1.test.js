import {Graph} from './23-1';

describe('Graph', () => {
    it('builds until has input', () => {
        const input =
            `#.#####################
            #.......#########...###`;

        const result = new Graph(input).longestPath;

        expect(result).toBe(7);
    });

    it('does not build when collision', () => {
        const input =
            `#.#####################
            #...>.<.#########...###`;

        const result = new Graph(input).longestPath;

        expect(result).toBe(0);
    });

    it('splits into 2 edges if needed', () => {
        const input =
            `#.#####################
            #.......#########...###
            #######.#########.#.###
            ###.....#.>.>.###.#.###
            ###v#####.#v#.###.#.###
            ###.>...#.#.#.....#...#
            ###v###.#.#.#########.#
            ###...###.#.......#...#
            #####.###.#.......#...#
            ###...###.#.......#...#`;

        const result = new Graph(input).longestPath;

        expect(result).toBe(23);
    });

    it('works for a full example', () => {
        const input =
            `#.#####################
            #.......#########...###
            #######.#########.#.###
            ###.....#.>.>.###.#.###
            ###v#####.#v#.###.#.###
            ###.>...#.#.#.....#...#
            ###v###.#.#.#########.#
            ###...#.#.#.......#...#
            #####.#.#.#######.#.###
            #.....#.#.#.......#...#
            #.#####.#.#.#########v#
            #.#...#...#...###...>.#
            #.#.#v#######v###.###v#
            #...#.>.#...>.>.#.###.#
            #####v#.#.###v#.#.###.#
            #.....#...#...#.#.#...#
            #.#########.###.#.#.###
            #...###...#...#...#.###
            ###.###.#.###v#####v###
            #...#...#.#.>.>.#.>.###
            #.###.###.#.###.#.#v###
            #.....###...###...#...#
            #####################.#`;

        const result = new Graph(input).longestPath;

        expect(result).toBe(94);
    });
});
